
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.1.1
 * Query Engine version: 6a3747c37ff169c90047725a05a6ef02e32ac97e
 */
Prisma.prismaVersion = {
  client: "5.1.1",
  engine: "6a3747c37ff169c90047725a05a6ef02e32ac97e"
}


const runtimeDescription = (() => {
  // https://edge-runtime.vercel.app/features/available-apis#addressing-the-runtime
  if ("EdgeRuntime" in globalThis && typeof globalThis.EdgeRuntime === "string") {
    return "under the Vercel Edge Runtime";
  }
  // Deno
  if ("Deno" in globalThis && typeof globalThis.Deno === "object") {
    return "under the Deno runtime";
  }
  // Default to assuming browser
  return "in the browser";
})();


Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  email: 'email',
  password: 'password'
};

exports.Prisma.AwardingScalarFieldEnum = {
  Name: 'Name',
  Email: 'Email',
  PhoneNumber: 'PhoneNumber',
  TransactionProof: 'TransactionProof',
  Origin: 'Origin',
  TransactionDate: 'TransactionDate'
};

exports.Prisma.Ci_sessionsScalarFieldEnum = {
  id: 'id',
  ip_address: 'ip_address',
  timestamp: 'timestamp',
  data: 'data'
};

exports.Prisma.Finalis2022ScalarFieldEnum = {
  Name: 'Name',
  Major: 'Major',
  Year: 'Year',
  Tagline: 'Tagline',
  Photo: 'Photo',
  id: 'id'
};

exports.Prisma.MetanoiaScalarFieldEnum = {
  Name: 'Name',
  Email: 'Email',
  PhoneNumber: 'PhoneNumber',
  TransactionProof: 'TransactionProof',
  Origin: 'Origin',
  TransactionDate: 'TransactionDate'
};

exports.Prisma.PesertaScalarFieldEnum = {
  Name: 'Name',
  StudentID: 'StudentID',
  Email: 'Email',
  gender: 'gender',
  BirthDate: 'BirthDate',
  BirthPlace: 'BirthPlace',
  Address: 'Address',
  PhoneNumber: 'PhoneNumber',
  LineID: 'LineID',
  IGUsername: 'IGUsername',
  Major: 'Major',
  Year: 'Year',
  GPA: 'GPA',
  gpaPict: 'gpaPict',
  Height: 'Height',
  Weight: 'Weight',
  clothesSize: 'clothesSize',
  pantsSize: 'pantsSize',
  shoeSize: 'shoeSize',
  AboutMe: 'AboutMe',
  Motivation: 'Motivation',
  Talents: 'Talents',
  OrganizationExperience: 'OrganizationExperience',
  Achievements: 'Achievements',
  RoleModelCharacter: 'RoleModelCharacter',
  picture: 'picture',
  personality: 'personality',
  essai: 'essai',
  Status: 'Status',
  QuestionType: 'QuestionType'
};

exports.Prisma.Peserta_2023ScalarFieldEnum = {
  id: 'id',
  name: 'name',
  nim: 'nim',
  email_student: 'email_student',
  birth_place: 'birth_place',
  birth_date: 'birth_date',
  gender: 'gender',
  address: 'address',
  phone_number: 'phone_number',
  line_id: 'line_id',
  instagram_username: 'instagram_username',
  tiktok_username: 'tiktok_username',
  major: 'major',
  year: 'year',
  sub_gpa: 'sub_gpa',
  gpa: 'gpa',
  height: 'height',
  weight: 'weight',
  clothes_size: 'clothes_size',
  shoe_size: 'shoe_size',
  pants_size: 'pants_size',
  about_me: 'about_me',
  motivation: 'motivation',
  personality: 'personality',
  talents: 'talents',
  achievements: 'achievements',
  picture: 'picture',
  personality_screenshot: 'personality_screenshot',
  grades_screenshot: 'grades_screenshot',
  student_card_screenshot: 'student_card_screenshot',
  created_at: 'created_at'
};

exports.Prisma.VotingScalarFieldEnum = {
  NIM: 'NIM',
  Voters: 'Voters'
};

exports.Prisma.Sponsor_medparScalarFieldEnum = {
  Sponsor_MedparID: 'Sponsor_MedparID',
  type: 'type',
  src: 'src',
  nama: 'nama',
  url: 'url',
  bg: 'bg'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  user: 'user',
  awarding: 'awarding',
  ci_sessions: 'ci_sessions',
  finalis2022: 'finalis2022',
  metanoia: 'metanoia',
  peserta: 'peserta',
  peserta_2023: 'peserta_2023',
  voting: 'voting',
  sponsor_medpar: 'sponsor_medpar'
};

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
