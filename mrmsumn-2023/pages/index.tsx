import Head from "next/head";
import Image from "next/image";

import styles from "@/styles/Home.module.css";
import { Box, Flex, Img, Text, Heading } from "@chakra-ui/react";
import { useState, useRef, useEffect } from "react";
import react from "react";




export default function Home(props: any) {

  const [scroll, setScroll] = useState(0);
  const [brightness, setBrightness] = useState(1);
  const [opacity, setOpacity] = useState(0);


  const handleScroll = () => {
    const scrollPosition = window.pageYOffset;
    const percentage = scrollPosition / window.innerHeight;

    if (percentage > 0.3){
      setOpacity(scrollPosition / window.innerHeight);
    } else {
      setOpacity(0);
    }


    // min brightness 0.5
    // max brightness 1
    setBrightness((old) => {
      if (percentage < 0.2){
        return 1;
      } else {
        if (percentage > 0.5) return 0.5
        else return (1 - (percentage * 0.9))
      }
    });


    
    setScroll(scrollPosition/5);

  
  }



  useEffect(() => {
    console.log(brightness);
  }, [brightness]);


  useEffect(() => {
    window.addEventListener('scroll', handleScroll);
    return () => {
      window.removeEventListener('scroll', handleScroll);
    }
  }, []);


  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Flex
        minH={"100vh"}
        w='100%'
        h='200vh'
        bg="black"
        flexDirection={'column'}
        alignItems={"center"}
        justifyContent={"flex-start"}
        flexDir={"column"}
        top={'0'}
        overflowX={'hidden'}
        position={'relative'}
        >
          <Box
            w='100%'
            minW='1536px'
            h='100vh'
            position="fixed"
            zIndex={0}
            filter={`brightness(${brightness})`}            
            transform={`scale(${1 + scroll / 3000})`}            
            >
              <Img minH='100%' minW='100%' src="/Assets/Images/hasti4k.png"></Img>                                       
          </Box>

          <Box
            w='100%'
            h='100vh'       
            position="fixed"
            filter={`brightness(${brightness})`}
            zIndex={0}
            >               
              <Img  minH='100%' position={'fixed'} left={0} w={{ base: "18rem", md: "20rem", lg: "30rem", xl: "50rem" }}  transform={`translateX(-${scroll}px)`} src="/Assets/Images/pohonkiri.png"></Img>
              <Img minH='100%' position={'fixed'} right={0} w={{ base: "18rem", md: "20rem", lg: "30rem", xl: "50rem" }}  transform={`translateX(${scroll}px)`} src="/Assets/Images/rumputkanan.png"></Img>                                    
          </Box>        

          <Box
            w='100%'
            h='100vh'       
            position="fixed"
            zIndex={1}
            display='flex'
            flexDirection={'column'}
            justifyContent={'center'}
            alignItems={'center'}
            >            
              <Img w='400px' h='400px' position='relative' top={`${170 - scroll/5}px`} opacity={opacity} transform={``} src="/Assets/Images/logo mr ms.png"></Img>               
              <Img w='400px' h='400px' position='relative' top={`${-120 - scroll/5}px`} opacity={opacity}  transform={``}  src="/Assets/Images/shinning soon.png"></Img>

          </Box>           


        </Flex>
    </div>
  );
}

// export async function getStaticProps() {
//   const res = await fetch("http://localhost:3000/api/hello");
//   const message = await res.json();
//   return {
//     props: {
//       message,
//     },
//   };
// }
